// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String? // For credentials provider
  accounts      Account[]
  sessions      Session[]

  // Subscription and Usage with Creem
  credits                Int       @default(10)
  creemCustomerId        String?   @unique @map("creem_customer_id")
  creemSubscriptionId    String?   @unique @map("creem_subscription_id")
  creemPriceId           String?   @map("creem_price_id")
  creemCurrentPeriodEnd  DateTime? @map("creem_current_period_end")

  // Logs
  generationLogs GenerationLog[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@id([identifier, token])
}

// Model to track image generation for both logged-in and anonymous users
model GenerationLog {
  id          String   @id @default(cuid())
  prompt      String
  imageUrl    String?
  creditsUsed Int
  createdAt   DateTime @default(now())

  // Relation to User (optional)
  userId    String?
  user      User?    @relation(fields: [userId], references: [id], onDelete: SetNull)

  // For anonymous users
  anonymousSessionId String?

  @@index([anonymousSessionId])
} 